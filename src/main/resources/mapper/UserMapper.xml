<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.zm.trip.web.dao.UserDao">

    	<resultMap id="BaseResultMap" type="cn.zm.trip.web.domain.User">
    		<id column="tp_uid" jdbcType="INTEGER" property="uid" />
    		<result column="tp_uname" jdbcType="VARCHAR" property="uname" />
    		<result column="tp_uemail" jdbcType="VARCHAR" property="uemail" />
    		<result column="tp_upwd" jdbcType="VARCHAR" property="upwd" />
    		<result column="tp_age" jdbcType="VARCHAR" property="age" />
    		<result column="tp_gender" jdbcType="VARCHAR" property="gender" />
    		<result column="tp_upic" jdbcType="VARCHAR" property="upic" />
    		<result column="tp_phone" jdbcType="VARCHAR" property="phone" />
    		<result column="tp_regdate" jdbcType="VARCHAR" property="regDate" />
    		<result column="tp_update_time" jdbcType="VARCHAR" property="updateTime" />
    		<result column="tp_like" jdbcType="VARCHAR" property="tp_like" />
    	</resultMap>

  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    tp_uid, tp_uname, tp_uemail, tp_upwd, tp_age, tp_gender, tp_upic, tp_phone, tp_regdate, 
    tp_update_time, tp_like
  </sql>
  <select id="selectByExample" parameterType="cn.zm.trip.web.domain.UserExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from tp_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from tp_user
    where tp_uid = #{uid,jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from tp_user
    where tp_uid = #{tpUid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.zm.trip.web.domain.User">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into tp_user (tp_uid, tp_uname, tp_uemail, 
      tp_upwd, tp_age, tp_gender, 
      tp_upic, tp_phone, tp_regdate, 
      tp_update_time, tp_like)
    values (#{tpUid,jdbcType=INTEGER}, #{tpUname,jdbcType=VARCHAR}, #{tpUemail,jdbcType=VARCHAR}, 
      #{tpUpwd,jdbcType=VARCHAR}, #{tpAge,jdbcType=VARCHAR}, #{tpGender,jdbcType=VARCHAR}, 
      #{tpUpic,jdbcType=VARCHAR}, #{tpPhone,jdbcType=VARCHAR}, #{tpRegdate,jdbcType=TIMESTAMP}, 
      #{tpUpdateTime,jdbcType=TIMESTAMP}, #{tpLike,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.zm.trip.web.domain.User">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into tp_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="tpUid != null">
        tp_uid,
      </if>
      <if test="tpUname != null">
        tp_uname,
      </if>
      <if test="tpUemail != null">
        tp_uemail,
      </if>
      <if test="tpUpwd != null">
        tp_upwd,
      </if>
      <if test="tpAge != null">
        tp_age,
      </if>
      <if test="tpGender != null">
        tp_gender,
      </if>
      <if test="tpUpic != null">
        tp_upic,
      </if>
      <if test="tpPhone != null">
        tp_phone,
      </if>
      <if test="tpRegdate != null">
        tp_regdate,
      </if>
      <if test="tpUpdateTime != null">
        tp_update_time,
      </if>
      <if test="tpLike != null">
        tp_like,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="tpUid != null">
        #{tpUid,jdbcType=INTEGER},
      </if>
      <if test="tpUname != null">
        #{tpUname,jdbcType=VARCHAR},
      </if>
      <if test="tpUemail != null">
        #{tpUemail,jdbcType=VARCHAR},
      </if>
      <if test="tpUpwd != null">
        #{tpUpwd,jdbcType=VARCHAR},
      </if>
      <if test="tpAge != null">
        #{tpAge,jdbcType=VARCHAR},
      </if>
      <if test="tpGender != null">
        #{tpGender,jdbcType=VARCHAR},
      </if>
      <if test="tpUpic != null">
        #{tpUpic,jdbcType=VARCHAR},
      </if>
      <if test="tpPhone != null">
        #{tpPhone,jdbcType=VARCHAR},
      </if>
      <if test="tpRegdate != null">
        #{tpRegdate,jdbcType=TIMESTAMP},
      </if>
      <if test="tpUpdateTime != null">
        #{tpUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tpLike != null">
        #{tpLike,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.zm.trip.web.domain.User">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update tp_user
    <set>
      <if test="tpUname != null">
        tp_uname = #{tpUname,jdbcType=VARCHAR},
      </if>
      <if test="tpUemail != null">
        tp_uemail = #{tpUemail,jdbcType=VARCHAR},
      </if>
      <if test="tpUpwd != null">
        tp_upwd = #{tpUpwd,jdbcType=VARCHAR},
      </if>
      <if test="tpAge != null">
        tp_age = #{tpAge,jdbcType=VARCHAR},
      </if>
      <if test="tpGender != null">
        tp_gender = #{tpGender,jdbcType=VARCHAR},
      </if>
      <if test="tpUpic != null">
        tp_upic = #{tpUpic,jdbcType=VARCHAR},
      </if>
      <if test="tpPhone != null">
        tp_phone = #{tpPhone,jdbcType=VARCHAR},
      </if>
      <if test="tpRegdate != null">
        tp_regdate = #{tpRegdate,jdbcType=TIMESTAMP},
      </if>
      <if test="tpUpdateTime != null">
        tp_update_time = #{tpUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tpLike != null">
        tp_like = #{tpLike,jdbcType=VARCHAR},
      </if>
    </set>
    where tp_uid = #{tpUid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.zm.trip.web.domain.User">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update tp_user
    set tp_uname = #{tpUname,jdbcType=VARCHAR},
      tp_uemail = #{tpUemail,jdbcType=VARCHAR},
      tp_upwd = #{tpUpwd,jdbcType=VARCHAR},
      tp_age = #{tpAge,jdbcType=VARCHAR},
      tp_gender = #{tpGender,jdbcType=VARCHAR},
      tp_upic = #{tpUpic,jdbcType=VARCHAR},
      tp_phone = #{tpPhone,jdbcType=VARCHAR},
      tp_regdate = #{tpRegdate,jdbcType=TIMESTAMP},
      tp_update_time = #{tpUpdateTime,jdbcType=TIMESTAMP},
      tp_like = #{tpLike,jdbcType=VARCHAR}
    where tp_uid = #{tpUid,jdbcType=INTEGER}
  </update>

<!--	&lt;resultMap id="BaseResultMap" type="cn.zm.trip.web.domain.User"&gt;-->
<!--		&lt;id column="tp_uid" jdbcType="INTEGER" property="uid" /&gt;-->
<!--		&lt;result column="tp_uname" jdbcType="VARCHAR" property="uname" /&gt;-->
<!--		&lt;result column="tp_uemail" jdbcType="VARCHAR" property="uemail" /&gt;-->
<!--		&lt;result column="tp_upwd" jdbcType="VARCHAR" property="upwd" /&gt;-->
<!--		&lt;result column="tp_age" jdbcType="VARCHAR" property="age" /&gt;-->
<!--		&lt;result column="tp_gender" jdbcType="VARCHAR" property="gender" /&gt;-->
<!--		&lt;result column="tp_upic" jdbcType="VARCHAR" property="upic" /&gt;-->
<!--		&lt;result column="tp_phone" jdbcType="VARCHAR" property="phone" /&gt;-->
<!--		&lt;result column="tp_regdate" jdbcType="VARCHAR" property="regDate" /&gt;-->
<!--		&lt;result column="tp_update_time" jdbcType="VARCHAR" property="updateTime" /&gt;-->
<!--		&lt;result column="tp_like" jdbcType="VARCHAR" property="tp_like" /&gt;-->
<!--	&lt;/resultMap&gt;-->

	<!--片段-->
	<sql id="UserColumns">
		tp_uid as uid,
		tp_uname as uname,
		tp_uemail as uemail,
		tp_upwd as upwd,
		tp_age as age,
		tp_gender as gender,
		tp_upic as upic,
		tp_phone as phone,
		tp_like as tp_like,
		tp_regdate as regDate,
		tp_update_time as updateTime

    </sql>

	<!--新建用户-->
	<insert id="insertUser">
		insert into tp_user(
			tp_uname,
			tp_uemail,
			tp_upwd,
			tp_regdate
		)values (
		 	#{uname},
            #{uemail},
            #{upwd},
            #{regDate}
		)
	</insert>

    <!--查询by用户名-->
    <select id="selectbyname" parameterType="String" resultType="User">
        SELECT <include refid="UserColumns"/> FROM tp_user where tp_uname = #{uname};
    </select>

    <!--查询用户by邮箱-->
    <select id="selectbyemail" parameterType="String" resultType="User">
        SELECT <include refid="UserColumns"/> FROM tp_user where tp_uemail = #{uemail};
    </select>


	<!--查询所有用户-->
	<select id="selectAll" resultType="User">
		SELECT <include refid="UserColumns" /> FROM tp_user
	</select>

	<!--用户列表模糊搜索-->
	<select id="search" resultType="User">
		SELECT
		<include refid="UserColumns" />
		FROM
			tp_user
		<where>
			<if test="uid != null and uid != ''">
				or tp_uid = #{uid}
			</if>

			<if test="uname != null and uname != ''">
				or tp_uname LIKE concat('%', #{uname}, '%')
			</if>

			<if test="uemail != null and uemail != ''">
				or tp_uemail  LIKE concat('%', #{uemail}, '%')
			</if>
		</where>
	</select>


	<!--删除用户-->
	<delete id="userDelete">
		delete from
			tp_user
		where tp_uid = #{uid};
	</delete>

	<!--用户登录 新建用户-->
	<select id="userLogin" resultType="User">
		select
			<include refid="UserColumns" />
		from tp_user
		where
			tp_uemail = #{uemail}
		and
			tp_upwd = #{upwd}
	</select>

	<!--更新用户信息,根据用户id修改用户信息-->
	<update id="updataUserInfo">
		update
			tp_user
		<set>
			<if test="uname != null and uname != ''">
				tp_uname = #{uname},
			</if>
			<if test="uemail != null and uemail != ''">
				tp_uemail = #{uemail},
			</if>
			<if test="upwd != null and upwd != ''">
				tp_upwd = #{upwd},
			</if>
			<if test="age != null and age != ''">
				tp_age = #{age},
			</if>
			<if test="gender != null and gender != ''">
				tp_gender = #{gender},
			</if>
			<if test="upic != null and upic != ''">
				tp_upic = #{upic},
			</if>
			<if test="phone != null and phone != ''">
				tp_phone = #{phone},
			</if>
			<if test="regDate != null and regDate != ''">
				tp_regdate = #{regDate},
			</if>
			<if test="updateTime != null and updateTime != ''">
				tp_update_time = #{updateTime},
			</if>
			tp_like = #{tp_like},
		</set>
		where tp_uid = #{uid}
	</update>

	<!--用户喜好更新-->
	<update id="updataUserLike">
		update
		tp_user
		<set>
			tp_like = #{1}
		</set>
		<where>
			tp_uid = #{0}
		</where>
	</update>


</mapper>